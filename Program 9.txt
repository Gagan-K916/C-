// Design a class “Complex” with data members, constructor and method for overloading a binary operator ‘+’. 
// Develop a C# program to read Two complex number and Print the results of addition.

int real, imag;

Console.Write("Complex 1: Enter the real no.: ");
real = int.Parse(Console.ReadLine() ?? "0");
Console.Write("Complex 1: Enter the imaginary no.: ");
imag = int.Parse(Console.ReadLine() ?? "0");

Complex c1 = new Complex(real, imag);

Console.Write("Complex 2: Enter the real no.: ");
real = int.Parse(Console.ReadLine() ?? "0");
Console.Write("Complex 2: Enter the imaginary no.: ");
imag = int.Parse(Console.ReadLine() ?? "0");

Complex c2 = new Complex(real, imag);

Complex c3 = c1 + c2;
Console.WriteLine("Addition of ({0}) and ({1}) is ({2})", c1, c2, c3);

class Complex{
    private int real;
    private int imag;

    public Complex(int real, int imag){
        this.real = real;
        this.imag = imag;
    }

    public static Complex operator + (Complex c1, Complex c2){
        return new Complex(c1.real + c2.real, c1.imag + c2.imag);
    }

    public override string ToString()
    {
        return(real + " + " + imag + "i");
    }
}

