public class Car
{
    public string Make { get; set; }
    public string Model { get; set; }
    public double PricePerDay { get; set; }
    public bool IsAvailable { get; set; }
    public Car(string make, string model, double pricePerDay, bool isAvailable = true)
    {
        Make = make;
        Model = model;
        PricePerDay = pricePerDay;
        IsAvailable = isAvailable;
    }

    // Overload the + operator to add rental durations (in days)
    public static TimeSpan operator +(Car car, TimeSpan duration1)
    {
        return duration1;
    }
    // Overload the – operator to subtract rental durations (in days)
    public static TimeSpan operator -(Car car, TimeSpan duration1)
    {
        return duration1;
    }
    // Overload the > operator to compare rental prices
    public static bool operator >(Car car1, Car car2)
    {
        return car1.PricePerDay > car2.PricePerDay;
    }
    // Overload the < operator to compare rental prices
    public static bool operator <(Car car1, Car car2)
    {
        return car1.PricePerDay < car2.PricePerDay;
    }
    // Override ToString method for displaying car information
    public override string ToString()
    {
        return $"Car: {Make} {Model} - Price: ${PricePerDay}/day - Available: {IsAvailable}";
    }
}
public class Program
{
    public static void Main(string[] args)
    {

        Car car1 = new Car("Toyota", "Camry", 50.0);
        Car car2 = new Car("Honda", "Accord", 45.5);
        // Rental durations are represented by TimeSpan
        TimeSpan rentalDuration = TimeSpan.FromDays(7);
        // Simulate adding and subtracting rental durations (operators don’t modify car objects)
        Console.WriteLine("Rental Duration: {0}", rentalDuration);
        // Compare car prices using overloaded operators
        Console.WriteLine("Car 1 more expensive: {0}", car1 > car2);
        Console.WriteLine("Car 2 more expensive: {0}", car2 < car1);
    }
}